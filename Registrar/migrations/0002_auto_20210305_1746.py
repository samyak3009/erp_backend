# Generated by Django 2.0 on 2021-03-05 17:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('login', '__first__'),
        ('Registrar', '0001_initial'),
    ]

    operations = [
#         migrations.CreateModel(
#             name='AdmissionEligibility',
#             fields=[
#                 ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
#                 ('min_marks', models.IntegerField(db_column='Min_marks')),
#             ],
#             options={
#                 'db_table': 'Student_admision_eligibility',
#                 'managed': True,
#             },
#         ),
            # migrations.CreateModel(
            #     name='CourseDetail',
            #     fields=[
            #         ('uid', models.AutoField(db_column='id', primary_key=True, serialize=False)),
            #         ('course_duration', models.IntegerField(db_column='Course_duration')),
            #         ('capacity', models.IntegerField(db_column='capacity', default=0)),
            #         ('lateral_capacity', models.IntegerField(db_column='lateral_capacity', default=0)),
            #     ],
            #     options={
            #         'db_table': 'Student_course_detail',
            #         'managed': True,
            #     },
            # ),
#         migrations.CreateModel(
#             name='RegistrarSessionCapacity',
#             fields=[
#                 ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
#                 ('session', models.CharField(blank=True, db_column='session', max_length=50, null=True)),
#                 ('capacity', models.IntegerField(db_column='capacity', default=0)),
#                 ('lateral_capacity', models.IntegerField(db_column='lateral_capacity', default=0)),
#                 ('course', models.ForeignKey(blank=True, db_column='course', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='RegistrarSessionCapacity_course', to='Registrar.CourseDetail')),
#             ],
#             options={
#                 'db_table': 'Registrar_session_capacity',
#                 'managed': True,
#             },
#         ),
        # migrations.CreateModel(
        #     name='Sections',
        #     fields=[
        #         ('section_id', models.AutoField(db_column='Section_id', primary_key=True, serialize=False)),
        #         ('section', models.CharField(db_column='Section', max_length=45)),
        #         ('status', models.CharField(blank=True, max_length=10, null=True)),
        #         ('dept', models.ForeignKey(db_column='Dept_detail', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Sections_CourseDetail_Sections_dept', to='Registrar.CourseDetail')),
        #     ],
        #     options={
        #         'db_table': 'sections',
        #         'managed': True,
        #     },
        # ),
#         migrations.CreateModel(
#             name='Semtiming',
#             fields=[
#                 ('uid', models.IntegerField(db_column='Uid', primary_key=True, serialize=False)),
#                 ('session', models.CharField(blank=True, max_length=15, null=True)),
#                 ('sem_type', models.CharField(blank=True, max_length=20, null=True)),
#                 ('sem_end', models.DateField(blank=True, null=True)),
#                 ('sem_start', models.DateField(blank=True, null=True)),
#                 ('session_name', models.CharField(max_length=25)),
#             ],
#             options={
#                 'db_table': 'sem_timing',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='StudentBankDetails',
#             fields=[
#                 ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
#                 ('acc_name', models.CharField(default=None, max_length=1000, null=True)),
#                 ('acc_num', models.CharField(default=None, max_length=1000, null=True)),
#                 ('bank_name', models.CharField(default=None, max_length=1000, null=True)),
#                 ('ifsc_code', models.CharField(default=None, max_length=1000, null=True)),
#                 ('branch', models.CharField(default=None, max_length=1000, null=True)),
#                 ('address', models.CharField(default=None, max_length=1000, null=True)),
#                 ('status', models.CharField(db_column='status', default='INSERT', max_length=20)),
#                 ('time_stamp', models.DateTimeField(auto_now=True)),
#                 ('edit_by', models.ForeignKey(db_column='Edit_by', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentBankdetails_AuthUser_username', to='login.AuthUser')),
#             ],
#             options={
#                 'db_table': 'Student_BankDetails',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='StudentBranchChange_1819e',
#             fields=[
#                 ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
#                 ('date', models.DateField()),
#                 ('change_type', models.CharField(db_column='change_type', default=None, max_length=20, null=True)),
#                 ('emp_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='BrChEmp_1819e', to='login.EmployeePrimdetail')),
#                 ('new_section', models.ForeignKey(db_column='new_section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='NewChSec_1819e', to='Registrar.Sections')),
#                 ('old_section', models.ForeignKey(db_column='old_section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='OldChSec_1819e', to='Registrar.Sections')),
#             ],
#             options={
#                 'db_table': 'Student_BranchChange_1819e',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='StudentBranchChange_1819o',
#             fields=[
#                 ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
#                 ('date', models.DateField()),
#                 ('change_type', models.CharField(db_column='change_type', default=None, max_length=20, null=True)),
#                 ('emp_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='BrChEmp_1819o', to='login.EmployeePrimdetail')),
#                 ('new_section', models.ForeignKey(db_column='new_section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='NewChSec_1819o', to='Registrar.Sections')),
#                 ('old_section', models.ForeignKey(db_column='old_section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='OldChSec_1819o', to='Registrar.Sections')),
#             ],
#             options={
#                 'db_table': 'Student_BranchChange_1819o',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='StudentBranchChange_1920e',
#             fields=[
#                 ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
#                 ('date', models.DateField()),
#                 ('change_type', models.CharField(db_column='change_type', default=None, max_length=20, null=True)),
#                 ('status', models.CharField(db_column='status', default='INSERT', max_length=20)),
#                 ('emp_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='BrChEmp_1920e', to='login.EmployeePrimdetail')),
#                 ('new_section', models.ForeignKey(db_column='new_section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='NewChSec_1920e', to='Registrar.Sections')),
#                 ('old_section', models.ForeignKey(db_column='old_section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='OldChSec_1920e', to='Registrar.Sections')),
#             ],
#             options={
#                 'db_table': 'Student_BranchChange_1920e',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='StudentBranchChange_1920o',
#             fields=[
#                 ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
#                 ('date', models.DateField()),
#                 ('change_type', models.CharField(db_column='change_type', default=None, max_length=20, null=True)),
#                 ('emp_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='BrChEmp_1920o', to='login.EmployeePrimdetail')),
#                 ('new_section', models.ForeignKey(db_column='new_section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='NewChSec_1920o', to='Registrar.Sections')),
#                 ('old_section', models.ForeignKey(db_column='old_section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='OldChSec_1920o', to='Registrar.Sections')),
#             ],
#             options={
#                 'db_table': 'Student_BranchChange_1920o',
#                 'managed': True,
#             },
#         ),
        # migrations.CreateModel(
        #     name='StudentBranchChange_2021e',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('date', models.DateField()),
        #         ('change_type', models.CharField(db_column='change_type', default=None, max_length=20, null=True)),
        #         ('emp_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='BrChEmp_2021e', to='login.EmployeePrimdetail')),
        #         ('new_section', models.ForeignKey(db_column='new_section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='NewChSec_2021e', to='Registrar.Sections')),
        #         ('old_section', models.ForeignKey(db_column='old_section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='OldChSec_2021e', to='Registrar.Sections')),
        #     ],
        #     options={
        #         'db_table': 'Student_BranchChange_2021e',
        #         'managed': True,
        #     },
        # ),
#         migrations.CreateModel(
#             name='StudentBranchChange_2021o',
#             fields=[
#                 ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
#                 ('date', models.DateField()),
#                 ('change_type', models.CharField(db_column='change_type', default=None, max_length=20, null=True)),
#                 ('emp_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='BrChEmp_2021o', to='login.EmployeePrimdetail')),
#                 ('new_section', models.ForeignKey(db_column='new_section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='NewChSec_2021o', to='Registrar.Sections')),
#                 ('old_section', models.ForeignKey(db_column='old_section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='OldChSec_2021o', to='Registrar.Sections')),
#             ],
#             options={
#                 'db_table': 'Student_BranchChange_2021o',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='StudentDropdown',
#             fields=[
#                 ('sno', models.AutoField(db_column='Sno', primary_key=True, serialize=False)),
#                 ('pid', models.IntegerField(blank=True, db_column='Pid', null=True)),
#                 ('field', models.CharField(blank=True, db_column='Field', max_length=500, null=True)),
#                 ('value', models.CharField(blank=True, db_column='Value', max_length=500, null=True)),
#                 ('is_edit', models.IntegerField(db_column='Is_Edit', default='1')),
#                 ('is_delete', models.IntegerField(db_column='Is_Delete', default='1')),
#                 ('status', models.CharField(blank=True, max_length=10, null=True)),
#             ],
#             options={
#                 'db_table': 'Student_Dropdown',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='StudentPrimDetail',
#             fields=[
#                 ('name', models.CharField(db_column='Name', max_length=500)),
#                 ('batch_from', models.IntegerField(db_column='Batch_from')),
#                 ('batch_to', models.IntegerField(db_column='Batch_to')),
#                 ('exam_roll_no', models.CharField(db_column='Exam_Roll_No', max_length=100)),
#                 ('general_rank', models.IntegerField(blank=True, db_column='General_Rank', null=True)),
#                 ('category_rank', models.IntegerField(blank=True, db_column='Category_Rank', null=True)),
#                 ('gen_rank', models.IntegerField(blank=True, db_column='Gen_Rank', null=True)),
#                 ('uni_roll_no', models.CharField(blank=True, db_column='Uni_Roll_No', max_length=15, null=True)),
#                 ('join_year', models.IntegerField(db_column='Join_Year')),
#                 ('email_id', models.CharField(blank=True, db_column='Email_id', max_length=500, null=True)),
#                 ('date_of_add', models.DateField(db_column='Date_Of_Add')),
#                 ('uniq_id', models.AutoField(db_column='Uniq_Id', primary_key=True, serialize=False)),
#                 ('form_fill_status', models.CharField(db_column='Form_Fill_Status', default='N', max_length=2)),
#                 ('fee_waiver', models.CharField(db_column='Fee_Waiver', default='N', max_length=41)),
#                 ('remark', models.CharField(blank=True, max_length=500, null=True)),
#                 ('remark_detail', models.CharField(blank=True, db_column='remark_detail', default=None, max_length=500, null=True)),
#                 ('old_uniq_id', models.CharField(max_length=50)),
#                 ('time_stamp', models.DateTimeField(auto_now=True, db_column='time_stamp')),
#             ],
#             options={
#                 'db_table': 'Student_primdetail',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='StudentSemester',
#             fields=[
#                 ('sem_id', models.AutoField(db_column='Sem_Id', primary_key=True, serialize=False)),
#                 ('sem', models.IntegerField(db_column='Sem')),
#                 ('dept', models.ForeignKey(db_column='Dept', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='CourseDetail_Dept', to='Registrar.CourseDetail')),
#             ],
#             options={
#                 'db_table': 'student_semester',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='StudentAcademic',
#             fields=[
#                 ('uniq_id', models.OneToOneField(db_column='Uniq_Id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='StudentAcademic_StudentPrimDetail_Uniq_Id', serialize=False, to='Registrar.StudentPrimDetail')),
#                 ('app_no', models.BigIntegerField(blank=True, db_column='Application_No', null=True)),
#                 ('year_10', models.IntegerField(blank=True, db_column='Year_10', null=True)),
#                 ('per_10', models.FloatField(blank=True, db_column='Per_10', null=True)),
#                 ('max_10', models.FloatField(blank=True, db_column='Max_10', null=True)),
#                 ('total_10', models.FloatField(blank=True, db_column='Total_10', null=True)),
#                 ('year_12', models.IntegerField(blank=True, db_column='Year_12', null=True)),
#                 ('per_12', models.FloatField(blank=True, db_column='Per_12', null=True)),
#                 ('max_12', models.FloatField(blank=True, db_column='Max_12', null=True)),
#                 ('total_12', models.FloatField(blank=True, db_column='Total_12', null=True)),
#                 ('phy_12', models.FloatField(blank=True, db_column='Phy_12', null=True)),
#                 ('phy_max', models.FloatField(blank=True, db_column='Phy_Max', null=True)),
#                 ('chem_12', models.FloatField(blank=True, db_column='Chem_12', null=True)),
#                 ('chem_max', models.FloatField(blank=True, db_column='Chem_Max', null=True)),
#                 ('math_12', models.FloatField(blank=True, db_column='Math_12', null=True)),
#                 ('math_max', models.FloatField(blank=True, db_column='Math_Max', null=True)),
#                 ('eng_12', models.FloatField(blank=True, db_column='Eng_12', null=True)),
#                 ('eng_max', models.FloatField(blank=True, db_column='Eng_Max', null=True)),
#                 ('bio_12', models.FloatField(blank=True, db_column='Bio_12', null=True)),
#                 ('bio_max', models.FloatField(blank=True, db_column='Bio_Max', null=True)),
#                 ('cs_12', models.FloatField(blank=True, db_column='Cs_12', null=True)),
#                 ('cs_max', models.FloatField(blank=True, db_column='Cs_Max', null=True)),
#                 ('pcm_total', models.FloatField(blank=True, db_column='PCM_Total', null=True)),
#                 ('is_dip', models.CharField(db_column='Is_Dip', default='0', max_length=9, null=True)),
#                 ('year_dip', models.IntegerField(blank=True, db_column='Year_Dip', null=True)),
#                 ('per_dip', models.FloatField(blank=True, db_column='Per_Dip', null=True)),
#                 ('max_dip', models.FloatField(blank=True, db_column='Max_Dip', null=True)),
#                 ('total_dip', models.FloatField(blank=True, db_column='Total_Dip', null=True)),
#                 ('ug_year1', models.FloatField(blank=True, db_column='UG_Year1', null=True)),
#                 ('ug_year1_max', models.FloatField(blank=True, db_column='UG_Year1_Max', null=True)),
#                 ('ug_year1_back', models.FloatField(blank=True, db_column='UG_Year1_Back', null=True)),
#                 ('ug_year2', models.FloatField(blank=True, db_column='UG_Year2', null=True)),
#                 ('ug_year2_max', models.FloatField(blank=True, db_column='UG_Year2_Max', null=True)),
#                 ('ug_year2_back', models.FloatField(blank=True, db_column='UG_Year2_Back', null=True)),
#                 ('ug_year3', models.FloatField(blank=True, db_column='UG_Year3', null=True)),
#                 ('ug_year3_max', models.FloatField(blank=True, db_column='UG_Year3_Max', null=True)),
#                 ('ug_year3_back', models.FloatField(blank=True, db_column='UG_Year3_Back', null=True)),
#                 ('ug_year4', models.FloatField(blank=True, db_column='UG_Year4', null=True)),
#                 ('ug_year4_max', models.FloatField(blank=True, db_column='UG_Year4_Max', null=True)),
#                 ('ug_year4_back', models.FloatField(blank=True, db_column='UG_Year4_Back', null=True)),
#                 ('year_ug', models.IntegerField(blank=True, db_column='Year_UG', null=True)),
#                 ('per_ug', models.FloatField(blank=True, db_column='Per_UG', null=True)),
#                 ('max_ug', models.FloatField(blank=True, db_column='Max_UG', null=True)),
#                 ('total_ug', models.FloatField(blank=True, db_column='Total_UG', null=True)),
#                 ('sem1_ug', models.FloatField(blank=True, db_column='Sem1_UG', null=True)),
#                 ('sem1_ug_max', models.FloatField(blank=True, db_column='Sem1_UG_Max', null=True)),
#                 ('sem1_ug_back', models.FloatField(blank=True, db_column='Sem1_UG_Back', null=True)),
#                 ('sem2_ug', models.FloatField(blank=True, db_column='Sem2_UG', null=True)),
#                 ('sem2_ug_max', models.FloatField(blank=True, db_column='Sem2_UG_Max', null=True)),
#                 ('sem2_ug_back', models.FloatField(blank=True, db_column='Sem2_UG_Back', null=True)),
#                 ('sem3_ug', models.FloatField(blank=True, db_column='Sem3_UG', null=True)),
#                 ('sem3_ug_max', models.FloatField(blank=True, db_column='Sem3_UG_Max', null=True)),
#                 ('sem3_ug_back', models.FloatField(blank=True, db_column='Sem3_UG_Back', null=True)),
#                 ('sem4_ug', models.FloatField(blank=True, db_column='Sem4_UG', null=True)),
#                 ('sem4_ug_max', models.FloatField(blank=True, db_column='Sem4_UG_Max', null=True)),
#                 ('sem4_ug_back', models.FloatField(blank=True, db_column='Sem4_UG_Back', null=True)),
#                 ('sem5_ug', models.FloatField(blank=True, db_column='Sem5_UG', null=True)),
#                 ('sem5_ug_max', models.FloatField(blank=True, db_column='Sem5_UG_Max', null=True)),
#                 ('sem5_ug_back', models.FloatField(blank=True, db_column='Sem5_UG_Back', null=True)),
#                 ('sem6_ug', models.FloatField(blank=True, db_column='Sem6_UG', null=True)),
#                 ('sem6_ug_max', models.FloatField(blank=True, db_column='Sem6_UG_Max', null=True)),
#                 ('sem6_ug_back', models.FloatField(blank=True, db_column='Sem6_UG_Back', null=True)),
#                 ('sem7_ug', models.FloatField(blank=True, db_column='Sem7_UG', null=True)),
#                 ('sem7_ug_max', models.FloatField(blank=True, db_column='Sem7_UG_Max', null=True)),
#                 ('sem7_ug_back', models.FloatField(blank=True, db_column='Sem7_UG_Back', null=True)),
#                 ('sem8_ug', models.FloatField(blank=True, db_column='Sem8_UG', null=True)),
#                 ('sem8_ug_max', models.FloatField(blank=True, db_column='Sem8_UG_Max', null=True)),
#                 ('sem8_ug_back', models.FloatField(blank=True, db_column='Sem8_UG_Back', null=True)),
#                 ('pg_year1', models.FloatField(blank=True, db_column='PG_Year1', null=True)),
#                 ('pg_year1_max', models.FloatField(blank=True, db_column='PG_Year1_MAX', null=True)),
#                 ('pg_year1_back', models.FloatField(blank=True, db_column='PG_Year1_Back', null=True)),
#                 ('pg_year2', models.FloatField(blank=True, db_column='PG_Year2', null=True)),
#                 ('pg_year2_max', models.FloatField(blank=True, db_column='PG_Year2_MAX', null=True)),
#                 ('pg_year2_back', models.FloatField(blank=True, db_column='PG_Year2_Back', null=True)),
#                 ('pg_year3', models.FloatField(blank=True, db_column='PG_Year3', null=True)),
#                 ('pg_year3_max', models.FloatField(blank=True, db_column='PG_Year3_MAX', null=True)),
#                 ('pg_year3_back', models.FloatField(blank=True, db_column='PG_Year3_Back', null=True)),
#                 ('year_pg', models.FloatField(blank=True, db_column='Year_PG', null=True)),
#                 ('per_pg', models.FloatField(blank=True, db_column='Per_PG', null=True)),
#                 ('sem1_pg', models.FloatField(blank=True, db_column='Sem1_PG', null=True)),
#                 ('sem1_pg_max', models.FloatField(blank=True, db_column='Sem1_PG_MAX', null=True)),
#                 ('sem1_pg_back', models.FloatField(blank=True, db_column='Sem1_PG_Back', null=True)),
#                 ('sem2_pg', models.FloatField(blank=True, db_column='Sem2_PG', null=True)),
#                 ('sem2_pg_max', models.FloatField(blank=True, db_column='Sem2_PG_MAX', null=True)),
#                 ('sem2_pg_back', models.FloatField(blank=True, db_column='Sem2_PG_Back', null=True)),
#                 ('sem3_pg', models.FloatField(blank=True, db_column='Sem3_PG', null=True)),
#                 ('sem3_pg_max', models.FloatField(blank=True, db_column='Sem3_PG_MAX', null=True)),
#                 ('sem3_pg_back', models.FloatField(blank=True, db_column='Sem3_PG_Back', null=True)),
#                 ('sem4_pg', models.FloatField(blank=True, db_column='Sem4_PG', null=True)),
#                 ('sem4_pg_max', models.FloatField(blank=True, db_column='Sem4_PG_MAX', null=True)),
#                 ('sem4_pg_back', models.FloatField(blank=True, db_column='Sem4_PG_Back', null=True)),
#                 ('sem5_pg', models.FloatField(blank=True, db_column='Sem5_PG', null=True)),
#                 ('sem5_pg_max', models.FloatField(blank=True, db_column='Sem5_PG_MAX', null=True)),
#                 ('sem5_pg_back', models.FloatField(blank=True, db_column='Sem5_PG_Back', null=True)),
#                 ('sem6_pg', models.FloatField(blank=True, db_column='Sem6_PG', null=True)),
#                 ('sem6_pg_max', models.FloatField(blank=True, db_column='Sem6_PG_MAX', null=True)),
#                 ('sem6_pg_back', models.FloatField(blank=True, db_column='Sem6_PG_Back', null=True)),
#                 ('area_dip', models.CharField(blank=True, db_column='Area_Dip', max_length=100, null=True)),
#                 ('ug_degree', models.CharField(blank=True, db_column='UG_Degree', max_length=100, null=True)),
#                 ('ug_area', models.CharField(blank=True, db_column='UG_Area', max_length=100, null=True)),
#                 ('pg_degree', models.CharField(blank=True, db_column='PG_Degree', max_length=100, null=True)),
#                 ('pg_area', models.CharField(blank=True, db_column='PG_Area', max_length=100, null=True)),
#                 ('is_gate_or_gpat', models.CharField(db_column='is_gate_or_gpat', default=None, max_length=9, null=True)),
#                 ('gate_or_gpat_qualified', models.CharField(db_column='gate_or_gpat_qualified', default=None, max_length=40, null=True)),
#                 ('gate_or_gpat_discipline', models.CharField(db_column='gate_or_gpat_discipline', default=None, max_length=40, null=True)),
#                 ('gate_or_gpat_rank', models.IntegerField(blank=True, db_column='gate_or_gpat_rank', null=True)),
#                 ('gate_or_gpat_year', models.IntegerField(blank=True, db_column='gate_or_gpat_year', null=True)),
#                 ('gate_or_gpat_score', models.IntegerField(blank=True, db_column='gate_or_gpat_score', null=True)),
#                 ('board_10', models.ForeignKey(blank=True, db_column='Board_10', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentAcademic_EmployeeDropdown_Board_10', to='login.EmployeeDropdown')),
#                 ('board_12', models.ForeignKey(blank=True, db_column='Board_12', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentAcademic_EmployeeDropdown_Board_12', to='login.EmployeeDropdown')),
#                 ('uni_dip', models.ForeignKey(blank=True, db_column='Uni_Dip', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentAcademic_EmployeeDropdown_Uni_Dip', to='login.EmployeeDropdown')),
#                 ('uni_pg', models.ForeignKey(blank=True, db_column='Uni_PG', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentAcademic_EmployeeDropdown_Uni_PG', to='login.EmployeeDropdown')),
#                 ('uni_ug', models.ForeignKey(blank=True, db_column='Uni_UG', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentAcademic_EmployeeDropdown_Uni_UG', to='login.EmployeeDropdown')),
#             ],
#             options={
#                 'db_table': 'Student_Academic',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='StudentAddress',
#             fields=[
#                 ('uniq_id', models.OneToOneField(db_column='Uniq_Id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='StudentAddress_StudentPrimDetail_Uniq_Id', serialize=False, to='Registrar.StudentPrimDetail')),
#                 ('p_add1', models.CharField(blank=True, db_column='P_Add1', max_length=100, null=True)),
#                 ('p_add2', models.CharField(blank=True, db_column='P_Add2', max_length=100, null=True)),
#                 ('p_city', models.CharField(blank=True, db_column='P_City', max_length=30, null=True)),
#                 ('p_district', models.CharField(blank=True, db_column='P_District', max_length=30, null=True)),
#                 ('p_pincode', models.CharField(blank=True, db_column='P_Pincode', max_length=10, null=True)),
#                 ('c_add1', models.CharField(blank=True, db_column='C_Add1', max_length=100, null=True)),
#                 ('c_add2', models.CharField(blank=True, db_column='C_Add2', max_length=100, null=True)),
#                 ('c_city', models.CharField(blank=True, db_column='C_City', max_length=30, null=True)),
#                 ('c_district', models.CharField(blank=True, db_column='C_District', max_length=30, null=True)),
#                 ('c_pincode', models.CharField(blank=True, db_column='C_Pincode', max_length=10, null=True)),
#                 ('c_state', models.ForeignKey(blank=True, db_column='C_State', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentAddress_C_State', to='login.EmployeeDropdown')),
#                 ('p_state', models.ForeignKey(blank=True, db_column='P_State', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentAddress_P_State', to='login.EmployeeDropdown')),
#             ],
#             options={
#                 'db_table': 'Student_Address',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='StudentDocument',
#             fields=[
#                 ('uniq_id', models.OneToOneField(db_column='Uniq_Id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='StudentDocument_StudentPrimDetail_Uniq_Id', serialize=False, to='Registrar.StudentPrimDetail')),
#                 ('allot_letter', models.CharField(blank=True, db_column='Allot_Letter', max_length=50, null=True)),
#                 ('marksheet_10', models.CharField(blank=True, db_column='Marksheet_10', max_length=50, null=True)),
#                 ('marksheet_12', models.CharField(blank=True, db_column='Marksheet_12', max_length=50, null=True)),
#                 ('marksheet_dip', models.CharField(blank=True, db_column='Marksheet_Dip', max_length=50, null=True)),
#                 ('marksheet_ug', models.CharField(blank=True, db_column='Marksheet_Ug', max_length=50, null=True)),
#                 ('caste_certificate', models.CharField(blank=True, db_column='Caste_Certificate', max_length=50, null=True)),
#                 ('domicile_certificate', models.CharField(blank=True, db_column='Domicile_Certificate', max_length=50, null=True)),
#                 ('addressid', models.CharField(blank=True, db_column='AddressId', max_length=50, null=True)),
#                 ('father_pic', models.CharField(blank=True, db_column='Father_Pic', max_length=50, null=True)),
#                 ('mother_pic', models.CharField(blank=True, db_column='Mother_Pic', max_length=50, null=True)),
#                 ('guardian_pic', models.CharField(blank=True, db_column='Guardian_Pic', max_length=50, null=True)),
#             ],
#             options={
#                 'db_table': 'Student_Document',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='StudentFamilyDetails',
#             fields=[
#                 ('uniq_id', models.OneToOneField(db_column='Uniq_Id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='StudentFamilyDetails_StudentPrimDetail_Uniq_Id', serialize=False, to='Registrar.StudentPrimDetail')),
#                 ('father_mob', models.BigIntegerField(blank=True, db_column='Father_Mob', null=True)),
#                 ('father_email', models.CharField(blank=True, db_column='Father_Email', max_length=500, null=True)),
#                 ('father_income', models.FloatField(blank=True, db_column='Father_Income', null=True)),
#                 ('father_dept', models.CharField(blank=True, db_column='Father_Dept', max_length=500, null=True)),
#                 ('father_add', models.CharField(blank=True, db_column='Father_Add', max_length=1000, null=True)),
#                 ('father_city', models.CharField(blank=True, db_column='Father_City', max_length=100, null=True)),
#                 ('father_pan_no', models.CharField(blank=True, db_column='Father_pan_no', default=None, max_length=40, null=True)),
#                 ('father_uan_no', models.CharField(blank=True, db_column='Father_uan_no', default=None, max_length=40, null=True)),
#                 ('mother_mob', models.BigIntegerField(blank=True, db_column='Mother_Mob', null=True)),
#                 ('mother_email', models.CharField(blank=True, db_column='Mother_Email', max_length=500, null=True)),
#                 ('mother_income', models.FloatField(blank=True, db_column='Mother_Income', null=True)),
#                 ('mother_dept', models.CharField(blank=True, db_column='Mother_Dept', max_length=500, null=True)),
#                 ('mother_add', models.CharField(blank=True, db_column='Mother_Add', max_length=1000, null=True)),
#                 ('mother_city', models.CharField(blank=True, db_column='Mother_City', max_length=100, null=True)),
#                 ('mother_pan_no', models.CharField(blank=True, db_column='Mother_pan_no', default=None, max_length=40, null=True)),
#                 ('mother_uan_no', models.CharField(blank=True, db_column='Mother_uan_no', default=None, max_length=40, null=True)),
#                 ('gname', models.CharField(blank=True, db_column='Gname', max_length=500, null=True)),
#                 ('g_relation', models.CharField(blank=True, db_column='G_Relation', max_length=500, null=True)),
#                 ('g_mob', models.BigIntegerField(blank=True, db_column='G_Mob', null=True)),
#                 ('g_email', models.CharField(blank=True, db_column='G_Email', max_length=500, null=True)),
#                 ('g_add', models.CharField(blank=True, db_column='G_Add', max_length=1000, null=True)),
#                 ('g_city', models.CharField(blank=True, db_column='G_City', max_length=100, null=True)),
#                 ('g_pincode', models.CharField(blank=True, db_column='G_Pincode', max_length=10, null=True)),
#                 ('father_occupation', models.ForeignKey(blank=True, db_column='Father_Occupation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Father_Occupation', to='Registrar.StudentDropdown')),
#                 ('g_state', models.ForeignKey(blank=True, db_column='G_State', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentAddress_G_State', to='login.EmployeeDropdown')),
#                 ('mother_occupation', models.ForeignKey(blank=True, db_column='Mother_Occupation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Mother_Occupation', to='Registrar.StudentDropdown')),
#             ],
#             options={
#                 'db_table': 'Student_Family_Details',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='StudentPerDetail',
#             fields=[
#                 ('uniq_id', models.OneToOneField(db_column='Uniq_Id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='StudentPerDetail_StudentPrimDetail_Uniq_Id', serialize=False, to='Registrar.StudentPrimDetail')),
#                 ('fname', models.CharField(blank=True, db_column='FName', max_length=50, null=True)),
#                 ('mob_sec', models.BigIntegerField(blank=True, db_column='Mob_Sec', null=True)),
#                 ('dob', models.DateField(blank=True, db_column='DOB', null=True)),
#                 ('image_path', models.CharField(blank=True, max_length=500, null=True)),
#                 ('aadhar_num', models.BigIntegerField(blank=True, null=True)),
#                 ('bank_acc_no', models.CharField(blank=True, db_column='bank_Acc_no', max_length=40, null=True)),
#                 ('pan_no', models.CharField(blank=True, max_length=40, null=True)),
#                 ('uan_no', models.IntegerField(blank=True, null=True)),
#                 ('physically_disabled', models.CharField(blank=True, max_length=41, null=True)),
#                 ('mname', models.CharField(blank=True, db_column='MName', max_length=50, null=True)),
#                 ('caste_name', models.CharField(blank=True, max_length=40, null=True)),
#                 ('nation_other', models.CharField(blank=True, max_length=40, null=True)),
#                 ('bg', models.ForeignKey(blank=True, db_column='Bg', default=1013, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPerDetail_StudentDropdown_Bg', to='login.EmployeeDropdown')),
#                 ('marital_status', models.ForeignKey(blank=True, db_column='Marital_status', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPerDetail_StudentDropdown_Marital_status', to='login.EmployeeDropdown')),
#                 ('nationality', models.ForeignKey(blank=True, db_column='Nationality', default=261, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPerDetail_StudentDropdown_Nationality', to='login.EmployeeDropdown')),
#                 ('religion', models.ForeignKey(blank=True, db_column='Religion', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPerDetail_StudentDropdown_Religion', to='login.EmployeeDropdown')),
#             ],
#             options={
#                 'db_table': 'Student_perdetail',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='studentSession_1819e',
#             fields=[
#                 ('uniq_id', models.OneToOneField(db_column='Uniq_Id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='studentSession_1819e_StudentPrimDetail_Uniq_Id', serialize=False, to='Registrar.StudentPrimDetail')),
#                 ('mob', models.BigIntegerField(blank=True, db_column='Mob', null=True)),
#                 ('fee_status', models.CharField(blank=True, db_column='Fee_Status', max_length=20, null=True)),
#                 ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
#                 ('class_roll_no', models.IntegerField(blank=True, db_column='Class_Roll_No', null=True)),
#                 ('registration_status', models.IntegerField(blank=True, db_column='Registration_Status', default=1, null=True)),
#                 ('acc_reg', models.IntegerField(blank=True, db_column='Acc_Reg', null=True)),
#                 ('att_start_date', models.DateField(default=None, null=True)),
#                 ('reg_form_status', models.CharField(default='LOCK', max_length=10)),
#                 ('reg_date_time', models.DateTimeField(default=None, null=True)),
#             ],
#             options={
#                 'db_table': 'studentSession_1819e',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='studentSession_1819o',
#             fields=[
#                 ('uniq_id', models.OneToOneField(db_column='Uniq_Id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='studentSession_1819o_StudentPrimDetail_Uniq_Id', serialize=False, to='Registrar.StudentPrimDetail')),
#                 ('mob', models.BigIntegerField(blank=True, db_column='Mob', null=True)),
#                 ('fee_status', models.CharField(blank=True, db_column='Fee_Status', max_length=20, null=True)),
#                 ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
#                 ('class_roll_no', models.IntegerField(blank=True, db_column='Class_Roll_No', null=True)),
#                 ('registration_status', models.IntegerField(blank=True, db_column='Registration_Status', default=1, null=True)),
#                 ('acc_reg', models.IntegerField(blank=True, db_column='Acc_Reg', null=True)),
#                 ('att_start_date', models.DateField(default=None, null=True)),
#                 ('reg_form_status', models.CharField(default='LOCK', max_length=10)),
#                 ('reg_date_time', models.DateTimeField(default=None, null=True)),
#             ],
#             options={
#                 'db_table': 'studentSession_1819o',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='studentSession_1920e',
#             fields=[
#                 ('uniq_id', models.OneToOneField(db_column='Uniq_Id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='studentSession_1920e_StudentPrimDetail_Uniq_Id', serialize=False, to='Registrar.StudentPrimDetail')),
#                 ('mob', models.BigIntegerField(blank=True, db_column='Mob', null=True)),
#                 ('fee_status', models.CharField(blank=True, db_column='Fee_Status', max_length=20, null=True)),
#                 ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
#                 ('class_roll_no', models.IntegerField(blank=True, db_column='Class_Roll_No', null=True)),
#                 ('registration_status', models.IntegerField(blank=True, db_column='Registration_Status', default=1, null=True)),
#                 ('acc_reg', models.IntegerField(blank=True, db_column='Acc_Reg', null=True)),
#                 ('att_start_date', models.DateField(default=None, null=True)),
#                 ('reg_form_status', models.CharField(default='LOCK', max_length=10)),
#                 ('reg_date_time', models.DateTimeField(default=None, null=True)),
#             ],
#             options={
#                 'db_table': 'studentSession_1920e',
#                 'managed': True,
#             },
#         ),
#         migrations.CreateModel(
#             name='studentSession_1920o',
#             fields=[
#                 ('uniq_id', models.OneToOneField(db_column='Uniq_Id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='studentSession_1920o_StudentPrimDetail_Uniq_Id', serialize=False, to='Registrar.StudentPrimDetail')),
#                 ('mob', models.BigIntegerField(blank=True, db_column='Mob', null=True)),
#                 ('fee_status', models.CharField(blank=True, db_column='Fee_Status', max_length=20, null=True)),
#                 ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
#                 ('class_roll_no', models.IntegerField(blank=True, db_column='Class_Roll_No', null=True)),
#                 ('registration_status', models.IntegerField(blank=True, db_column='Registration_Status', default=1, null=True)),
#                 ('acc_reg', models.IntegerField(blank=True, db_column='Acc_Reg', null=True)),
#                 ('att_start_date', models.DateField(default=None, null=True)),
#                 ('reg_form_status', models.CharField(default='LOCK', max_length=10)),
#                 ('reg_date_time', models.DateTimeField(default=None, null=True)),
#             ],
#             options={
#                 'db_table': 'studentSession_1920o',
#                 'managed': True,
#             },
#         ),
        migrations.CreateModel(
            name='studentSession_2021e',
            fields=[
                ('uniq_id', models.OneToOneField(db_column='Uniq_Id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='studentSession_2021e_StudentPrimDetail_Uniq_Id', serialize=False, to='Registrar.StudentPrimDetail')),
                ('mob', models.BigIntegerField(blank=True, db_column='Mob', null=True)),
                ('fee_status', models.CharField(blank=True, db_column='Fee_Status', max_length=20, null=True)),
                ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
                ('class_roll_no', models.IntegerField(blank=True, db_column='Class_Roll_No', null=True)),
                ('registration_status', models.IntegerField(blank=True, db_column='Registration_Status', default=1, null=True)),
                ('acc_reg', models.IntegerField(blank=True, db_column='Acc_Reg', null=True)),
                ('att_start_date', models.DateField(default=None, null=True)),
                ('reg_form_status', models.CharField(default='LOCK', max_length=10)),
                ('reg_date_time', models.DateTimeField(default=None, null=True)),
            ],
            options={
                'db_table': 'studentSession_2021e',
                'managed': True,
            },
        ),
#         migrations.CreateModel(
#             name='studentSession_2021o',
#             fields=[
#                 ('uniq_id', models.OneToOneField(db_column='Uniq_Id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='studentSession_2021o_StudentPrimDetail_Uniq_Id', serialize=False, to='Registrar.StudentPrimDetail')),
#                 ('mob', models.BigIntegerField(blank=True, db_column='Mob', null=True)),
#                 ('fee_status', models.CharField(blank=True, db_column='Fee_Status', max_length=20, null=True)),
#                 ('year', models.IntegerField(blank=True, db_column='Year', null=True)),
#                 ('class_roll_no', models.IntegerField(blank=True, db_column='Class_Roll_No', null=True)),
#                 ('registration_status', models.IntegerField(blank=True, db_column='Registration_Status', default=1, null=True)),
#                 ('acc_reg', models.IntegerField(blank=True, db_column='Acc_Reg', null=True)),
#                 ('att_start_date', models.DateField(default=None, null=True)),
#                 ('reg_form_status', models.CharField(default='LOCK', max_length=10)),
#                 ('reg_date_time', models.DateTimeField(default=None, null=True)),
#             ],
#             options={
#                 'db_table': 'studentSession_2021o',
#                 'managed': True,
#             },
#         ),
#         migrations.AddField(
#             model_name='studentprimdetail',
#             name='admission_category',
#             field=models.ForeignKey(blank=True, db_column='Admission_category', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPrimDetail_StudentDropdown_Admission_category', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='studentprimdetail',
#             name='admission_status',
#             field=models.ForeignKey(blank=True, db_column='admission_status', default=52, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPrimDetail_StudentDropdown_admission_status', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='studentprimdetail',
#             name='admission_through',
#             field=models.ForeignKey(blank=True, db_column='Admission_through', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPrimDetail_StudentDropdown_Admission_through', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='studentprimdetail',
#             name='admission_type',
#             field=models.ForeignKey(blank=True, db_column='Admission_type', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPrimDetail_StudentDropdown_Admission_type', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='studentprimdetail',
#             name='caste',
#             field=models.ForeignKey(blank=True, db_column='Caste', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPerDetail_StudentDropdown_Caste', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='studentprimdetail',
#             name='dept_detail',
#             field=models.ForeignKey(blank=True, db_column='Dept_detail', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPrimDetail_CourseDetail_Dept_detail', to='Registrar.CourseDetail'),
#         ),
#         migrations.AddField(
#             model_name='studentprimdetail',
#             name='exam_type',
#             field=models.ForeignKey(blank=True, db_column='Exam_type', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPrimDetail_StudentDropdown_Exam_type', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='studentprimdetail',
#             name='gender',
#             field=models.ForeignKey(blank=True, db_column='Gender', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPerDetail_StudentDropdown_Gender', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='studentprimdetail',
#             name='lib',
#             field=models.ForeignKey(blank=True, db_column='Lib_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPrimDetail_AuthUser_Lib_id', to='login.AuthUser', to_field='username'),
#         ),
#         migrations.AddField(
#             model_name='studentprimdetail',
#             name='stu_type',
#             field=models.ForeignKey(blank=True, db_column='Stu_Type', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentPrimDetail_StudentDropdown_Stu_Type', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='studentbankdetails',
#             name='uniq_id',
#             field=models.ForeignKey(db_column='Uniq_Id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentBank_Uniq_Id', to='Registrar.StudentPrimDetail'),
#         ),
#         migrations.AddField(
#             model_name='sections',
#             name='sem_id',
#             field=models.ForeignKey(db_column='Sem_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Sections_StudentSemester_Sections_sem_id', to='Registrar.StudentSemester'),
#         ),
#         migrations.AddField(
#             model_name='coursedetail',
#             name='course',
#             field=models.ForeignKey(blank=True, db_column='Course_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentDropdown_Course_id', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='coursedetail',
#             name='course_type',
#             field=models.ForeignKey(blank=True, db_column='Course_type', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='StudentDropdown_Course_type', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='coursedetail',
#             name='dept',
#             field=models.ForeignKey(blank=True, db_column='Dept_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='EmployeeDropdown_Dept_id', to='login.EmployeeDropdown'),
#         ),
#         migrations.AddField(
#             model_name='admissioneligibility',
#             name='admission_through',
#             field=models.ForeignKey(blank=True, db_column='Admission_through', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='AdmissionEligibility_Admission_through', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='admissioneligibility',
#             name='admission_type',
#             field=models.ForeignKey(blank=True, db_column='Admission_type', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='AdmissionEligibility_Admission_type', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='admissioneligibility',
#             name='caste',
#             field=models.ForeignKey(blank=True, db_column='Caste', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='AdmissionEligibility_Caste', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='admissioneligibility',
#             name='course',
#             field=models.ForeignKey(blank=True, db_column='Course_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='AdmissionEligibility_Course_id', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='admissioneligibility',
#             name='eligible_entry',
#             field=models.ForeignKey(blank=True, db_column='Eligible_entry', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='AdmissionEligibility_Eligible_entry', to='Registrar.StudentDropdown'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_2021o',
#             name='section',
#             field=models.ForeignKey(blank=True, db_column='Section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='studentSession_2021o_Sections_Section_id', to='Registrar.Sections'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_2021o',
#             name='sem',
#             field=models.ForeignKey(blank=True, db_column='Sem_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='studentSession_2021o_Semtiming_Sem_id', to='Registrar.StudentSemester'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_2021o',
#             name='session',
#             field=models.ForeignKey(db_column='session', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='S2021Session', to='Registrar.Semtiming'),
#         ),
        # migrations.AddField(
        #     model_name='studentsession_2021e',
        #     name='section',
        #     field=models.ForeignKey(blank=True, db_column='Section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='studentSession_2021e_Sections_Section_id', to='Registrar.Sections'),
        # ),
        # migrations.AddField(
        #     model_name='studentsession_2021e',
        #     name='sem',
        #     field=models.ForeignKey(blank=True, db_column='Sem_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='studentSession_2021e_Semtiming_Sem_id', to='Registrar.StudentSemester'),
        # ),
        # migrations.AddField(
        #     model_name='studentsession_2021e',
        #     name='session',
        #     field=models.ForeignKey(db_column='session', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='S2021eSession', to='Registrar.Semtiming'),
        # ),
#         migrations.AddField(
#             model_name='studentsession_1920o',
#             name='section',
#             field=models.ForeignKey(blank=True, db_column='Section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='studentSession_1920o_Sections_Section_id', to='Registrar.Sections'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_1920o',
#             name='sem',
#             field=models.ForeignKey(blank=True, db_column='Sem_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='studentSession_1920o_Semtiming_Sem_id', to='Registrar.StudentSemester'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_1920o',
#             name='session',
#             field=models.ForeignKey(db_column='session', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='S1920Session', to='Registrar.Semtiming'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_1920e',
#             name='section',
#             field=models.ForeignKey(blank=True, db_column='Section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='studentSession_1920e_Sections_Section_id', to='Registrar.Sections'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_1920e',
#             name='sem',
#             field=models.ForeignKey(blank=True, db_column='Sem_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='studentSession_1920e_Semtiming_Sem_id', to='Registrar.StudentSemester'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_1920e',
#             name='session',
#             field=models.ForeignKey(db_column='session', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ES1920Session', to='Registrar.Semtiming'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_1819o',
#             name='section',
#             field=models.ForeignKey(blank=True, db_column='Section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='studentSession_1819o_Sections_Section_id', to='Registrar.Sections'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_1819o',
#             name='sem',
#             field=models.ForeignKey(blank=True, db_column='Sem_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='studentSession_1819o_Semtiming_Sem_id', to='Registrar.StudentSemester'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_1819o',
#             name='session',
#             field=models.ForeignKey(db_column='session', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='S1819Session', to='Registrar.Semtiming'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_1819e',
#             name='section',
#             field=models.ForeignKey(blank=True, db_column='Section_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='studentSession_1819e_Sections_Section_id', to='Registrar.Sections'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_1819e',
#             name='sem',
#             field=models.ForeignKey(blank=True, db_column='Sem_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='studentSession_1819e_Semtiming_Sem_id', to='Registrar.StudentSemester'),
#         ),
#         migrations.AddField(
#             model_name='studentsession_1819e',
#             name='session',
#             field=models.ForeignKey(db_column='session', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='S1819eSession', to='Registrar.Semtiming'),
#         ),
#         migrations.AddField(
#             model_name='studentbranchchange_2021o',
#             name='uniq_id',
#             field=models.ForeignKey(db_column='Uniq_Id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stu_br_ch_uniq_2021o', to='Registrar.studentSession_2021o'),
#         ),
        # migrations.AddField(
        #     model_name='studentbranchchange_2021e',
        #     name='uniq_id',
        #     field=models.ForeignKey(db_column='Uniq_Id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stu_br_ch_uniq_2021e', to='Registrar.studentSession_2021e'),
        # ),
#         migrations.AddField(
#             model_name='studentbranchchange_1920o',
#             name='uniq_id',
#             field=models.ForeignKey(db_column='Uniq_Id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stu_br_ch_uniq', to='Registrar.studentSession_1920o'),
#         ),
#         migrations.AddField(
#             model_name='studentbranchchange_1920e',
#             name='uniq_id',
#             field=models.ForeignKey(db_column='Uniq_Id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stu_br_ch_e_uniq', to='Registrar.studentSession_1920e'),
#         ),
#         migrations.AddField(
#             model_name='studentbranchchange_1819o',
#             name='uniq_id',
#             field=models.ForeignKey(db_column='Uniq_Id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stu_br_ch_uniq', to='Registrar.studentSession_1819o'),
#         ),
#         migrations.AddField(
#             model_name='studentbranchchange_1819e',
#             name='uniq_id',
#             field=models.ForeignKey(db_column='Uniq_Id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stu_br_ch_uniq', to='Registrar.studentSession_1819e'),
#         ),
    ]
